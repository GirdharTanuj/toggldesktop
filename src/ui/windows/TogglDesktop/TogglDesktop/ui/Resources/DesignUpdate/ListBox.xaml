<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ListBox.xaml" />
        <ResourceDictionary Source="Typography.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Style x:Key="Toggl.AutoCompleteDropDownToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
        <Setter Property="Margin" Value="0 1 1 1" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="24" />
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="ToggleButtonRootGrid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="TextColumn" Width="*" />
                            <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            <ColumnDefinition x:Name="ToggleButtonColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PART_ClearText"
                                Grid.Column="1"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{TemplateBinding mah:TextBoxHelper.ClearTextButton}"
                                Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                Style="{DynamicResource ChromelessButtonStyle}"
                                Visibility="{TemplateBinding mah:TextBoxHelper.ClearTextButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Grid x:Name="BtnArrowBackground"
                              Grid.Column="2"
                              Margin="4,0"
                              Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                              Background="Transparent">
                            <Path x:Name="BtnArrow"
                                  Width="11"
                                  Height="11"
                                  HorizontalAlignment="Center"
                                  Data="F0 M 50.72,52.83 L 56,47.39 56.48,48.03 50.72,53.8 44.79,48.03 45.27,47.39 50.72,52.83 z"
                                  Fill="{DynamicResource Toggl.DarkGrayBrush}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Stretch="Uniform" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="LayoutTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MetroListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Toggl.AccentColor}" Opacity="0.4" />
            </Setter.Value>
        </Setter>
        <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Toggl.AccentColor}" Opacity="0.4" />
            </Setter.Value>
        </Setter>
        <Setter Property="mah:ItemHelper.SelectedBackgroundBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Toggl.AccentColor}" Opacity="0.4" />
            </Setter.Value>
        </Setter>
        <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource Toggl.ComboBox.HoverBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource Toggl.BodyText}" />
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>